* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
  overflow-x: hidden;
}

.game-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  position: relative;
}

.header {
  text-align: center;
  margin-bottom: 30px;
  color: white;
}

.game-title {
  font-size: clamp(2rem, 5vw, 3.5rem);
  font-weight: 800;
  background: linear-gradient(45deg, #ff6b6b, #ffd93d, #6bcf7f);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin-bottom: 10px;
  text-shadow: 0 4px 8px rgba(0,0,0,0.3);
}

.level-info {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px;
  margin-bottom: 20px;
  flex-wrap: wrap;
}

.level-badge {
  background: rgba(255,255,255,0.2);
  backdrop-filter: blur(10px);
  border-radius: 25px;
  padding: 10px 20px;
  border: 1px solid rgba(255,255,255,0.3);
  color: white;
  font-weight: 600;
  font-size: 1.1rem;
}

.score {
  background: linear-gradient(45deg, #ff6b6b, #ee5a52);
  color: white;
  padding: 10px 20px;
  border-radius: 25px;
  font-weight: 600;
  box-shadow: 0 4px 15px rgba(255,107,107,0.4);
}

.timer {
  background: linear-gradient(45deg, #4ecdc4, #44a08d);
  color: white;
  padding: 10px 20px;
  border-radius: 25px;
  font-weight: 600;
  box-shadow: 0 4px 15px rgba(78,205,196,0.4);
}

.game-board {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 30px;
  align-items: start;
}

.puzzle-container {
  background: rgba(255,255,255,0.1);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 30px;
  border: 1px solid rgba(255,255,255,0.2);
  box-shadow: 0 8px 32px rgba(0,0,0,0.1);
}

.puzzle-grid {
  display: grid;
  gap: 2px;
  justify-content: center;
  margin-bottom: 20px;
}

.puzzle-square {
  width: 40px;
  height: 40px;
  background: rgba(255,255,255,0.9);
  border: none;
  border-radius: 8px;
  font-size: 1.2rem;
  font-weight: 700;
  color: #2c3e50;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.puzzle-square:hover {
  transform: scale(1.1);
  background: rgba(255,255,255,1);
  box-shadow: 0 4px 12px rgba(0,0,0,0.2);
}

.puzzle-square.selected {
  background: linear-gradient(45deg, #ff6b6b, #ee5a52);
  color: white;
  transform: scale(1.05);
  box-shadow: 0 4px 15px rgba(255,107,107,0.5);
}

.puzzle-square.found {
  background: linear-gradient(45deg, #6bcf7f, #4ecdc4);
  color: white;
  animation: found-pulse 0.6s ease;
}

@keyframes found-pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.2); }
}

.words-panel {
  background: rgba(255,255,255,0.1);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 30px;
  border: 1px solid rgba(255,255,255,0.2);
  width: 280px;
  box-shadow: 0 8px 32px rgba(0,0,0,0.1);
}

.words-title {
  color: white;
  font-size: 1.5rem;
  font-weight: 700;
  margin-bottom: 20px;
  text-align: center;
}

.words-list {
  list-style: none;
  display: grid;
  gap: 12px;
}

.word-item {
  background: rgba(255,255,255,0.1);
  padding: 12px 18px;
  border-radius: 12px;
  color: white;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  border: 1px solid rgba(255,255,255,0.2);
}

.word-item.found {
  background: linear-gradient(45deg, #6bcf7f, #4ecdc4);
  text-decoration: line-through;
  transform: scale(0.95);
  opacity: 0.7;
}

.controls {
  display: flex;
  gap: 15px;
  justify-content: center;
  margin-top: 20px;
  flex-wrap: wrap;
}

.btn {
  background: linear-gradient(45deg, #667eea, #764ba2);
  color: white;
  border: none;
  padding: 12px 25px;
  border-radius: 25px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(102,126,234,0.4);
}

.btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(102,126,234,0.6);
}

.btn.secondary {
  background: linear-gradient(45deg, #ff6b6b, #ee5a52);
  box-shadow: 0 4px 15px rgba(255,107,107,0.4);
}

.btn.secondary:hover {
  box-shadow: 0 6px 20px rgba(255,107,107,0.6);
}

.level-complete {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

.level-complete.show {
  opacity: 1;
  visibility: visible;
}

.completion-card {
  background: linear-gradient(135deg, #667eea, #764ba2);
  padding: 40px;
  border-radius: 20px;
  text-align: center;
  color: white;
  box-shadow: 0 20px 60px rgba(0,0,0,0.3);
  transform: scale(0.8);
  transition: transform 0.3s ease;
}

.level-complete.show .completion-card {
  transform: scale(1);
}

.completion-title {
  font-size: 2.5rem;
  font-weight: 800;
  margin-bottom: 20px;
  background: linear-gradient(45deg, #ffd93d, #ff6b6b);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .game-board {
      grid-template-columns: 1fr;
      gap: 20px;
  }

  .words-panel {
      width: 100%;
      order: -1;
  }

  .puzzle-square {
      width: 35px;
      height: 35px;
      font-size: 1rem;
  }

  .puzzle-container {
      padding: 20px;
  }

  .words-panel {
      padding: 20px;
  }
}

@media (max-width: 480px) {
  .puzzle-square {
      width: 30px;
      height: 30px;
      font-size: 0.9rem;
  }

  .game-container {
      padding: 15px;
  }

  .level-info {
      gap: 10px;
  }

  .level-badge, .score, .timer {
      padding: 8px 16px;
      font-size: 1rem;
  }
}

.particles {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: rgba(255,255,255,0.6);
  border-radius: 50%;
  animation: float 6s infinite linear;
}

@keyframes float {
  from {
      transform: translateY(100vh) rotate(0deg);
      opacity: 1;
  }
  to {
      transform: translateY(-100px) rotate(360deg);
      opacity: 0;
  }
}